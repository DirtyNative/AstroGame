// <auto-generated />
using System;
using AstroGame.Api.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AstroGame.Api.Migrations
{
    [DbContext(typeof(AstroGameDataContext))]
    [Migration("20210227031142_FlagFixes_2")]
    partial class FlagFixes_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.Prefab", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Offset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rotation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prefabs");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.BaseTypes.StellarObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<double?>("AverageDistanceToCenter")
                        .HasColumnType("float");

                    b.Property<int>("AverageTemperature")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParentSystemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("RotationSpeed")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("StellarObject");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.BaseTypes.StellarSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("MultiObjectSystemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StellarSystemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MultiObjectSystemId");

                    b.HasIndex("ParentId");

                    b.HasIndex("StellarSystemId");

                    b.ToTable("StellarSystem");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.CloudsPrefab", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Prefabs.Prefab");

                    b.ToTable("CloudsPrefabs");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.MoonPrefab", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Prefabs.Prefab");

                    b.ToTable("MoonPrefabs");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.PlanetAtmospherePrefab", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Prefabs.Prefab");

                    b.Property<int>("PlanetTypes")
                        .HasColumnType("int");

                    b.ToTable("PlanetAtmospherePrefabs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b9e5331-c0e7-40bd-9986-9c758bcddaad"),
                            Name = "PlanetAtmosphere_1",
                            Offset = "(0.0, 0.0, 0.0)",
                            Rotation = "(0.0, 0.0, 0.0)",
                            Scale = "(0.0, 0.0, 0.0)",
                            PlanetTypes = 1
                        },
                        new
                        {
                            Id = new Guid("3e4b70c5-9faa-405c-81ca-ca97af39e13b"),
                            Name = "PlanetAtmosphere_2",
                            Offset = "(0.0, 0.0, 0.0)",
                            Rotation = "(0.0, 0.0, 0.0)",
                            Scale = "(0.0, 0.0, 0.0)",
                            PlanetTypes = 1
                        },
                        new
                        {
                            Id = new Guid("e61b1aab-3424-4389-a795-6011e90f09ca"),
                            Name = "PlanetAtmosphere_3",
                            Offset = "(0.0, 0.0, 0.0)",
                            Rotation = "(0.0, 0.0, 0.0)",
                            Scale = "(0.0, 0.0, 0.0)",
                            PlanetTypes = 6
                        },
                        new
                        {
                            Id = new Guid("eb045083-2034-4534-a840-2cfb0a1a5ba5"),
                            Name = "PlanetAtmosphere_4",
                            Offset = "(0.0, 0.0, 0.0)",
                            Rotation = "(0.0, 0.0, 0.0)",
                            Scale = "(0.0, 0.0, 0.0)",
                            PlanetTypes = 7
                        },
                        new
                        {
                            Id = new Guid("5a8f946c-c61b-4e9b-bedf-e3fc507bc4ea"),
                            Name = "PlanetAtmosphere_5",
                            Offset = "(0.0, 0.0, 0.0)",
                            Rotation = "(0.0, 0.0, 0.0)",
                            Scale = "(0.0, 0.0, 0.0)",
                            PlanetTypes = 7
                        });
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.PlanetPrefab", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Prefabs.Prefab");

                    b.Property<int>("PlanetType")
                        .HasColumnType("int");

                    b.ToTable("PlanetPrefabs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b00728b7-156b-4e3a-9e64-291745f3022b"),
                            Name = "Planet_Volcano_1",
                            Offset = "(0.0, 0.0, 0.0)",
                            Rotation = "(0.0, 0.0, 0.0)",
                            Scale = "(0.0, 0.0, 0.0)",
                            PlanetType = 0
                        },
                        new
                        {
                            Id = new Guid("15e9687f-5f29-4683-b970-4a9ab62b2ba5"),
                            Name = "Planet_Volcano_2",
                            Offset = "(0.0, 0.0, 0.0)",
                            Rotation = "(0.0, 0.0, 0.0)",
                            Scale = "(0.0, 0.0, 0.0)",
                            PlanetType = 0
                        },
                        new
                        {
                            Id = new Guid("afe7414a-e21b-47ee-8a28-cf9bdc484e35"),
                            Name = "Planet_Volcano_3",
                            Offset = "(0.0, 0.0, 0.0)",
                            Rotation = "(0.0, 0.0, 0.0)",
                            Scale = "(0.0, 0.0, 0.0)",
                            PlanetType = 0
                        });
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.RingsPrefab", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Prefabs.Prefab");

                    b.ToTable("RingsPrefabs");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.StarPrefab", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Prefabs.Prefab");

                    b.Property<int>("StarType")
                        .HasColumnType("int");

                    b.ToTable("StarPrefabs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3394273-83e7-4eb4-b400-205abf8a581c"),
                            Name = "Test_Prefab",
                            Offset = "(0.0, 0.0, -1.0)",
                            Rotation = "(-1.0, 0.0, 0.0)",
                            Scale = "(0.0, 0.0, 0.0)",
                            StarType = 0
                        });
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarObjects.Moon", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Stellar.BaseTypes.StellarObject");

                    b.Property<double>("AxialTilt")
                        .HasColumnType("float");

                    b.Property<Guid>("PrefabId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RingPrefabId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RingsPrefabId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Scale")
                        .HasColumnType("float");

                    b.HasIndex("PrefabId");

                    b.HasIndex("RingsPrefabId");

                    b.ToTable("Moons");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarObjects.Planet", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Stellar.BaseTypes.StellarObject");

                    b.Property<Guid?>("AtmospherePrefabId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AxialTilt")
                        .HasColumnType("float");

                    b.Property<Guid?>("CloudsPrefabId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlanetType")
                        .HasColumnType("int");

                    b.Property<Guid>("PrefabId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RingPrefabId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Scale")
                        .HasColumnType("float");

                    b.HasIndex("AtmospherePrefabId");

                    b.HasIndex("CloudsPrefabId");

                    b.HasIndex("PrefabId");

                    b.HasIndex("RingPrefabId");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarObjects.Star", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Stellar.BaseTypes.StellarObject");

                    b.Property<double>("AxialTilt")
                        .HasColumnType("float");

                    b.Property<Guid>("PrefabId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Scale")
                        .HasColumnType("float");

                    b.Property<int>("StarType")
                        .HasColumnType("int");

                    b.HasIndex("PrefabId");

                    b.ToTable("Stars");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarSystems.MultiObjectSystem", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Stellar.BaseTypes.StellarSystem");

                    b.ToTable("MultiObjectSystems");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarSystems.SingleObjectSystem", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Stellar.BaseTypes.StellarSystem");

                    b.Property<Guid>("CenterObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("CenterObjectId")
                        .IsUnique()
                        .HasFilter("[CenterObjectId] IS NOT NULL");

                    b.ToTable("SingleObjectSystems");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarSystems.SolarSystem", b =>
                {
                    b.HasBaseType("AstroGame.Shared.Models.Stellar.StellarSystems.MultiObjectSystem");

                    b.ToTable("SolarSystems");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.BaseTypes.StellarSystem", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Stellar.StellarSystems.MultiObjectSystem", null)
                        .WithMany("CenterSystems")
                        .HasForeignKey("MultiObjectSystemId");

                    b.HasOne("AstroGame.Shared.Models.Stellar.BaseTypes.StellarSystem", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("AstroGame.Shared.Models.Stellar.BaseTypes.StellarSystem", null)
                        .WithMany("Satellites")
                        .HasForeignKey("StellarSystemId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.CloudsPrefab", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Prefabs.Prefab", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Prefabs.CloudsPrefab", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.MoonPrefab", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Prefabs.Prefab", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Prefabs.MoonPrefab", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.PlanetAtmospherePrefab", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Prefabs.Prefab", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Prefabs.PlanetAtmospherePrefab", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.PlanetPrefab", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Prefabs.Prefab", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Prefabs.PlanetPrefab", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.RingsPrefab", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Prefabs.Prefab", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Prefabs.RingsPrefab", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Prefabs.StarPrefab", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Prefabs.Prefab", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Prefabs.StarPrefab", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarObjects.Moon", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Stellar.BaseTypes.StellarObject", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Stellar.StellarObjects.Moon", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("AstroGame.Shared.Models.Prefabs.MoonPrefab", "Prefab")
                        .WithMany()
                        .HasForeignKey("PrefabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AstroGame.Shared.Models.Prefabs.RingsPrefab", "RingsPrefab")
                        .WithMany()
                        .HasForeignKey("RingsPrefabId");

                    b.Navigation("Prefab");

                    b.Navigation("RingsPrefab");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarObjects.Planet", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Prefabs.PlanetAtmospherePrefab", "AtmospherePrefab")
                        .WithMany()
                        .HasForeignKey("AtmospherePrefabId");

                    b.HasOne("AstroGame.Shared.Models.Prefabs.CloudsPrefab", "CloudsPrefab")
                        .WithMany()
                        .HasForeignKey("CloudsPrefabId");

                    b.HasOne("AstroGame.Shared.Models.Stellar.BaseTypes.StellarObject", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Stellar.StellarObjects.Planet", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("AstroGame.Shared.Models.Prefabs.PlanetPrefab", "Prefab")
                        .WithMany()
                        .HasForeignKey("PrefabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AstroGame.Shared.Models.Prefabs.RingsPrefab", "RingsPrefab")
                        .WithMany()
                        .HasForeignKey("RingPrefabId");

                    b.Navigation("AtmospherePrefab");

                    b.Navigation("CloudsPrefab");

                    b.Navigation("Prefab");

                    b.Navigation("RingsPrefab");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarObjects.Star", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Stellar.BaseTypes.StellarObject", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Stellar.StellarObjects.Star", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("AstroGame.Shared.Models.Prefabs.StarPrefab", "Prefab")
                        .WithMany()
                        .HasForeignKey("PrefabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prefab");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarSystems.MultiObjectSystem", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Stellar.BaseTypes.StellarSystem", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Stellar.StellarSystems.MultiObjectSystem", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarSystems.SingleObjectSystem", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Stellar.BaseTypes.StellarObject", "CenterObject")
                        .WithOne("ParentSystem")
                        .HasForeignKey("AstroGame.Shared.Models.Stellar.StellarSystems.SingleObjectSystem", "CenterObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AstroGame.Shared.Models.Stellar.BaseTypes.StellarSystem", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Stellar.StellarSystems.SingleObjectSystem", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("CenterObject");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarSystems.SolarSystem", b =>
                {
                    b.HasOne("AstroGame.Shared.Models.Stellar.StellarSystems.MultiObjectSystem", null)
                        .WithOne()
                        .HasForeignKey("AstroGame.Shared.Models.Stellar.StellarSystems.SolarSystem", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.BaseTypes.StellarObject", b =>
                {
                    b.Navigation("ParentSystem");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.BaseTypes.StellarSystem", b =>
                {
                    b.Navigation("Satellites");
                });

            modelBuilder.Entity("AstroGame.Shared.Models.Stellar.StellarSystems.MultiObjectSystem", b =>
                {
                    b.Navigation("CenterSystems");
                });
#pragma warning restore 612, 618
        }
    }
}
